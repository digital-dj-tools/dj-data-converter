name: "Build"
on: [push, workflow_dispatch]
jobs:
  test:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && contains(toJson(github.event.commits), '[ci skip]') == false && contains(toJson(github.event.commits), '[skip ci]') == false
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2
      - name: "Cache"
        uses: actions/cache@v3
        with:
          key: deps-${{ hashFiles('deps.edn') }}
          path: ~/.m2/repository
      - name: "Setup Java"
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: "Setup Clojure"
        uses: DeLaGuardo/setup-clojure@13.2
        with:
          cli: "1.12.0.1517"
      - name: "Clojure Tests"
        run: clojure -A:dev:test
      - name: "Install Node Dependencies"
        run: npm install
      - name: "ClojureScript Tests"
        run: clojure -A:dev:test-cljs
  uberjar:
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2
      - name: "Cache" 
        uses: actions/cache@v3
        with:
          key: deps-${{ hashFiles('deps.edn') }}
          path: ~/.m2/repository
      - name: "Setup Java"
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: "Setup Clojure"
        uses: DeLaGuardo/setup-clojure@13.2
        with:
          cli: "1.12.0.1517"
      - name: "Uberjar"
        run: clojure -M:clein uberjar
      - name: "Smoke Test"
        run: |
          java -jar target/dj-data-converter-SNAPSHOT-standalone.jar -h
          java -jar target/dj-data-converter-SNAPSHOT-standalone.jar test-resources/collection.nml
          java -jar target/dj-data-converter-SNAPSHOT-standalone.jar test-resources/rekordbox.xml
      - name: "Upload"
        uses: actions/upload-artifact@v4
        with:
          name: dj-data-converter-standalone
          path: target/dj-data-converter-SNAPSHOT-standalone.jar
  native-image-linux:
    needs: [uberjar]
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2
      - name: "Setup GraalVM"
        uses: DeLaGuardo/setup-graalvm@3
        with:
          graalvm-version: "20.2.0.java11"
      - name: "Install GraalVM Native Image Deps"
        run: |
          sudo apt -y update
          sudo apt -y install build-essential zlib1g-dev
      - name: "Install GraalVM Native Image"
        run: gu install native-image
      - name: "Download"
        uses: actions/download-artifact@v4
        with:
          name: dj-data-converter-standalone
      - name: "Native Image"
        run: native-image --verbose --no-server --no-fallback --allow-incomplete-classpath --report-unsupported-elements-at-runtime --initialize-at-build-time -J-Xmx8g -jar dj-data-converter-SNAPSHOT-standalone.jar -H:Name=dj-data-converter
      - name: "Smoke Test"
        run: |
          chmod +x dj-data-converter
          ./dj-data-converter -h
      - name: "Package"
        run: tar -czvf dj-data-converter-linux.tar.gz dj-data-converter
      - name: "Publish"
        uses: actions/upload-artifact@v4
        with:
          name: dj-data-converter-linux
          path: dj-data-converter-linux.tar.gz
  native-image-windows:
    needs: [uberjar]
    runs-on: windows-latest
    steps:
      - name: "Setup GraalVM"
        uses: DeLaGuardo/setup-graalvm@3
        with:
          graalvm-version: "20.2.0.java11"
      - name: "Install GraalVM Native Image"
        run: C:\hostedtoolcache\windows\GraalVM\20.2.0-java11\x64\bin\gu install native-image
      - name: "Install Visual C Build Tools Workload for Visual Studio 2017"
        run: choco install visualstudio2017-workload-vctools
      - name: "Download"
        uses: actions/download-artifact@v4
        with:
          name: dj-data-converter-standalone
      - name: "Native Image"
        shell: cmd
        run: |
          call "C:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\VC\Auxiliary\Build\vcvars64.bat"
          C:\hostedtoolcache\windows\GraalVM\20.2.0-java11\x64\bin\native-image --verbose --no-server --no-fallback --allow-incomplete-classpath --report-unsupported-elements-at-runtime --initialize-at-build-time -J-Xmx8g -jar dj-data-converter-SNAPSHOT-standalone.jar -H:Name=dj-data-converter
      - name: "Smoke Test"
        shell: cmd
        run: dj-data-converter.exe -h
      - name: "Package"
        run: 7z a dj-data-converter-win.zip dj-data-converter.exe
      - name: "Publish"
        uses: actions/upload-artifact@v4
        with:
          name: dj-data-converter-win
          path: dj-data-converter-win.zip
  native-image-mac:
    needs: [uberjar]
    runs-on: macos-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2
      - name: "Setup GraalVM"
        uses: DeLaGuardo/setup-graalvm@3
        with:
          graalvm-version: "20.2.0.java11"
      - name: "Install GraalVM Native Image"
        run: gu install native-image
      - name: "Download"
        uses: actions/download-artifact@v4
        with:
          name: dj-data-converter-standalone
      - name: "Native Image"
        run: native-image --verbose --no-server --no-fallback --allow-incomplete-classpath --report-unsupported-elements-at-runtime --initialize-at-build-time -J-Xmx8g -jar dj-data-converter-SNAPSHOT-standalone.jar -H:Name=dj-data-converter
      - name: "Smoke Test"
        run: |
          chmod +x dj-data-converter
          ./dj-data-converter -h
      - name: "Package"
        run: tar -czvf dj-data-converter-macos.tar.gz dj-data-converter
      - name: "Publish"
        uses: actions/upload-artifact@v4
        with:
          name: dj-data-converter-macos
          path: dj-data-converter-macos.tar.gz
  release:
    needs: [native-image-linux, native-image-windows, native-image-mac]
    runs-on: ubuntu-latest
    if: success() && contains(github.ref, 'refs/tags/')
    steps:
      - name: "Download"
        uses: actions/download-artifact@v4
      - name: "Release"
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: true
          prerelease: false
      - name: "Upload"
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dj-data-converter-linux/dj-data-converter-linux.tar.gz
          asset_name: dj-data-converter-linux.tar.gz
          asset_content_type: application/gzip
      - name: "Upload"
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dj-data-converter-win/dj-data-converter-win.zip
          asset_name: dj-data-converter-win.zip
          asset_content_type: application/zip
      - name: "Upload"
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dj-data-converter-macos/dj-data-converter-macos.tar.gz
          asset_name: dj-data-converter-macos.tar.gz
          asset_content_type: application/gzip
