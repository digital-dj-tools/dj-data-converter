
trigger:
  branches:
    include:
    - refs/heads/*
    - refs/tags/*
jobs:
- job: Build
  pool:
    vmImage: ubuntu-16.04
  steps:
  - script: |
      curl -O https://download.clojure.org/install/linux-install-1.10.0.411.sh
      chmod +x linux-install-1.10.0.411.sh
      sudo ./linux-install-1.10.0.411.sh
    displayName: Install Clojure
  - script: npm install
    displayName: Install Node Dependencies
  - script: clojure -Adev:test-cljs
    displayName: ClojureScript Tests
  - script: |
      clojure -A:dev:compile-cljs
      npm run build
    displayName: Package
  - task: PublishPipelineArtifact@0
    inputs:
      artifactName: dj-data-converter-pkg
      targetPath: pkg
- job: Test_Windows
  dependsOn: Build
  pool:
    vmImage: win1803
  steps:
  - task: DownloadPipelineArtifact@0
    inputs:
      artifactName: dj-data-converter-pkg
      targetPath: $(System.DefaultWorkingDirectory)\pkg
  - script: pkg\dj-data-converter-win.exe -h
    displayName: Smoke Test
- job: Test_Mac
  dependsOn: Build
  pool:
    vmImage: macOS-10.13
  steps:
  - task: DownloadPipelineArtifact@0
    inputs:
      artifactName: dj-data-converter-pkg
      targetPath: $(System.DefaultWorkingDirectory)/pkg
  - script: |
      chmod +x pkg/dj-data-converter-macos
      pkg/dj-data-converter-macos -h
    displayName: Smoke Test
- job: Release
  dependsOn:
  - Build
  - Test_Windows
  - Test_Mac
  condition: and(succeeded(), contains(variables['Build.SourceBranch'], 'refs/tags/'))
  pool:
    vmImage: ubuntu-16.04
  steps:
  - task: DownloadPipelineArtifact@0
    inputs:
      artifactName: dj-data-converter-pkg
      targetPath: $(System.DefaultWorkingDirectory)/pkg
  - task: GithubRelease@0
    inputs:
      gitHubConnection: digital-dj-tools-bot
      repositoryName: digital-dj-tools/dj-data-converter
      action: create
      target: $(Build.SourceVersion)
      tagSource: manual
      tag: $(Build.SourceBranchName)
      title: $(Build.SourceBranchName)
      assets: pkg/*
      isDraft: true
      addChangeLog: false